---
title: "Final Project"
authors: "Nathan Huang, Jake Klingenberg, Carson Neubert"
format: 
  html:
    embed-resources: true
    code-tools: true
    toc: true
editor: source
execute: 
  error: true
  echo: true
warning: false
message: false
---

## Data

```{r}
library(tidyverse)
library(dplyr)
```

```{r}
gdp_cap = read.csv("./gdp_pcap.csv")
lex = read.csv("./lex.csv")
```

The GDP data set represents the countries overall Gross Domestic Product, in Internation Dollars, divided by the country's population. The life expectancy data set represents the expected years a baby born in that year and country, would live.

## Data Cleaning

```{r}
conv_to_int <- function(x){
  if_else(
    str_detect(x, "k"),
    as.double(str_remove(x, pattern = "k"))*1000,
    as.double(x)
  )
}
  
x <- c("10.2k", "11.3k", 1000)
conv_to_int(x)
```

```{r}
gdp_clean <- gdp_cap |>
  mutate(across(.cols = "X1800":"X2099",
                .f = conv_to_int)
  )
  
```

The data for GDP per capita contained "k" as a representation of thousands of dollars. In order to make this easier to work with, we converted all data points in this set to doubles.

### Pivoting Data

```{r}
gdp_cap_long <- gdp_clean |>
  pivot_longer(cols = "X1800":"X2020",
               names_to = "year",
               values_to = "gdp_capita") |>
  select(country, year, gdp_capita)

lex_long <- lex |>
  pivot_longer(cols = "X1800":"X2020",
               names_to = "year",
               values_to = "life_ex") |>
  select(country, year, life_ex)
```

Here, we pivoted both data sets into a long format, so that each row represents a specific year, for a country, and their life expectancy or GDP per capita.

### Remove X's

```{r}
gdp_cap_long <- gdp_cap_long |>
  mutate(year = as.integer(str_remove(year, pattern = "X")))

lex_long <- lex_long |> 
  mutate(year = as.integer(str_remove(year, pattern = "X")))

```

When we read the data into quarto, the column names all contained X at the beginning of each year. Since we pivoted those into observations, we decided to remove those to make the years more clean.

### Join GDP and Life Expectancy

```{r}
data <- gdp_cap_long |> 
  full_join(lex_long, by = c("country", "year"))
data
```

Here we joined the data together into one frame with a column for year, country, GDP per capita, and life expectancy. Based on brief analysis of the data, we hypothesize that as GDP per capita increase, the life expectancy will also increase.

# Linear Regression

## Data Visualization

Creating a plot between GDP per Capita and Life Expectancy over time

```{r}
#| message: false
#| warning: false

library(ggplot2)
library(gganimate)
library(gifski)

plot <- ggplot(data = data,
               mapping = aes(x = gdp_capita,
                             y = life_ex,
                             color = country)) +
  geom_point(show.legend = FALSE,
             alpha = 0.5,
             size = 5) +
  theme_bw() +
  transition_time(year) +
  labs(title = "Life Expectancy (Years) vs. GDP per Capita in Year: {frame_time}",
       y = "",
       x = "GDP Per Capita (International $)")

animate(plot, duration =10, fps = 30, renderer = gifski_renderer())

```

Relationship between GDP per Capita and Life Expectancy averaged over years for each country

```{r}
#| message: false

graph_data <- data |>
  group_by(year) |>
  summarize(mean_gdp_capita = mean(gdp_capita, na.rm = TRUE),
            mean_life_ex = mean(life_ex, na.rm = TRUE))

ggplot(data = graph_data,
       mapping = aes(x = mean_life_ex,
                     y = mean_gdp_capita)) +
  geom_point() +
  geom_smooth(method = "lm")

```

### Linear Regression

Below is our fitted regression model between Mean GDP per Capita (response) and Mean Life Expectancy (explanatory).

```{r}

model <- lm(data = graph_data, mean_gdp_capita ~ mean_life_ex)
summary(model)

```

In the coefficient section, the intercept indicates that for a country to have a life expectancy of 0 years, its GDP per capita would be approximately -11220 international dollars. The estimated slope of 373.173 indicates that as life expectancy of a country increases by 1 year, GDP per capita of the same country increases by 373.173 international dollars on average.

## Model Fit

```{r}

var_response <- var(graph_data$mean_gdp_capita)
var_fitted <- var(fitted(model))
var_residuals <- var(residuals(model))

table <- tibble(
  "Response Variance" = var_response,
  "Fitted Value Variance" = var_fitted,
  "Residual Variance" = var_residuals
)

table

var_fitted / var_response

```

Our R\^2 value of `r var_fitted / var_response` indicates that our regression model accounts for 89.22% of the variation in our response (GDP per capita). Because this value is high, this suggests that we have a high quality model.

# Simulation

## Visualizing Simulations from the Model

```{r}
predicted <- predict(model)
se <- sigma(model)

simulated <- predicted + rnorm(length(predicted), mean = 0, sd = se)

graph_data <- graph_data |>
  mutate(simulated = simulated)

(
  ggplot(data = graph_data, mapping = aes(x=mean_life_ex, y=mean_gdp_capita)) + 
    geom_point() +
    geom_smooth(method="lm")
)

(
  ggplot(data = graph_data, mapping = aes(x=mean_life_ex, y=simulated)) + 
    geom_point() +
    geom_smooth(method="lm")
)
```

## Generating Multiple Predictive Checks

```{r}
generate_data <- function(model){
  predicted <- predict(model)
  se <- sigma(model)
  simulated <- predicted + rnorm(length(predicted), mean = 0, sd = se)
  return(simulated)
}
  
results <- map(.x = 1:1000,
               .f = ~ generate_data(model)
               )

r_squared <- function(sim){
  reg <- lm(graph_data$mean_gdp_capita ~ sim)
  return((summary(reg))$r.squared)
}

r_squared_table <- map(.x = results,
                       .f = ~ r_squared(.x))
```

Plot the distribution of R\^2 values from the regressions

```{r}
ggplot(data = r_squared_table,
       aes(x = r_squared_table))
```
