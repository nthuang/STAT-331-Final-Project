---
title: "Final Project"
authors: "Nathan Huang, Jake Klingenberg, Carson Neubert"
format: 
  html:
    embed-resources: true
    code-tools: true
    toc: true
editor: source
execute: 
  error: true
  echo: true
warning: false
message: false
---

## Data

```{r}
library(tidyverse)
library(dplyr)
```

```{r}
gdp_cap = read.csv("./gdp_pcap.csv")
lex = read.csv("./lex.csv")
```
The GDP data set represents the countries overall Gross Domestic Product, in Internation Dollars, divided by the country's population. The life expectancy data set represents the expected years a baby born in that year and country, would live. 

## Data Cleaning

```{r}
conv_to_int <- function(x){
  if_else(
    str_detect(x, "k"),
    as.double(str_remove(x, pattern = "k"))*1000,
    as.double(x)
  )
}
  
x <- c("10.2k", "11.3k", 1000)
conv_to_int(x)
```

```{r}
gdp_clean <- gdp_cap |>
  mutate(across(.cols = "X1800":"X2099",
                .f = conv_to_int)
  )
  
```

The data for GDP per capita contained "k" as a representation of thousands of dollars. In order to make this easier to work with, we converted all data points in this set to doubles.

### Pivoting Data
```{r}
gdp_cap_long <- gdp_clean |>
  pivot_longer(cols = "X1800":"X2020",
               names_to = "year",
               values_to = "gdp_capita") |>
  select(country, year, gdp_capita)

lex_long <- lex |>
  pivot_longer(cols = "X1800":"X2020",
               names_to = "year",
               values_to = "life_ex") |>
  select(country, year, life_ex)
```

Here, we pivoted both data sets into a long format, so that each row represents a specific year, for a country, and their life expectancy or GDP per capita.
  
### Remove X's
```{r}
gdp_cap_long <- gdp_cap_long |>
  mutate(year = as.integer(str_remove(year, pattern = "X")))

lex_long <- lex_long |> 
  mutate(year = as.integer(str_remove(year, pattern = "X")))

```

When we read the data into quarto, the column names all contained X at the beginning of each year. Since we pivoted those into observations, we decided to remove those to make the years more clean.

### Join GDP and Life Expectancy
```{r}
data <- gdp_cap_long |> 
  full_join(lex_long, by = c("country", "year"))
data
```

Here we joined the data together into one frame with a column for year, country, GDP per capita, and life expectancy. Based on brief analysis of the data, we hypothesize that as GDP per capita increase, the life expectancy will also increase.

### Combining Data and Modelling
```{r}
graph_data <- data |>
  group_by(year) |>
  summarize(mean_gdp_capita = mean(gdp_capita, na.rm = TRUE),
            mean_life_ex = mean(life_ex, na.rm = TRUE))

model <- lm(data = graph_data, mean_gdp_capita ~ mean_life_ex)
summary(model)

table <- as.data.frame(summary(model)$coefficients)
table2 <- summary(graph_data$mean_gdp_capita, 
                  graph_data$mean_life_ex)



table2
```

```{r}
ggplot(data = graph_data,
       mapping = aes(x = mean_life_ex,
                     y = mean_gdp_capita)) +
  geom_point() +
  geom_smooth(method = "lm")

```
The results we got here for our Beta 1 coefficient was

```{r}
predicted <- predict(model)
se <- sigma(model)

simulated <- predicted + rnorm(length(predicted), mean = 0, sd = se)

graph_data <- graph_data |>
  mutate(simulated = simulated)

(
  ggplot(data = graph_data, mapping = aes(x=mean_life_ex, y=mean_gdp_capita)) + 
    geom_point() +
    geom_smooth(method="lm")
)

(
  ggplot(data = graph_data, mapping = aes(x=mean_life_ex, y=simulated)) + 
    geom_point() +
    geom_smooth(method="lm")
)
```